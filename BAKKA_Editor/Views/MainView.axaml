<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:BAKKA_Editor.ViewModels"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="1154" d:DesignHeight="800"
             xmlns:controls="clr-namespace:BAKKA_Editor.Controls"
             x:Class="BAKKA_Editor.Views.MainView"
             PropertyChanged="AvaloniaObject_OnPropertyChanged">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="HeaderBorderColor" Color="#0f0f0f" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="HeaderBorderColor" Color="#444444" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="RadioButton">
            <Setter Property="Margin" Value="0,4,0,4" />
        </Style>
        <Style Selector="Button.note">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="0,0,0,4" />
        </Style>
        <Style Selector="Button.center-text">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style Selector="Button.stretch">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <DockPanel Margin="2">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New..." Command="{Binding NewCommand}" InputGesture="Ctrl+N" />
                <MenuItem Header="_Open..." Command="{Binding OpenCommand}" InputGesture="Ctrl+O" />
                <MenuItem Header="_Save..." Command="{Binding SaveCommand}" InputGesture="Ctrl+S" />
                <MenuItem Header="_Save As..." Command="{Binding SaveAsCommand}" InputGesture="Ctrl+Shift+S" />
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Undo" Name="UndoMenuItem" Command="{Binding UndoCommand}" InputGesture="Ctrl+Z" />
                <MenuItem Header="Redo" Name="RedoMenuItem" Command="{Binding RedoCommand}" InputGesture="Ctrl+Y" />
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="Show Cursor" Command="{Binding ToggleShowCursorCommand}">
                    <MenuItem.Icon>
                        <CheckBox
                            Name="ShowCursorMenuItem"
                            BorderThickness="0"
                            IsHitTestVisible="False"
                            IsChecked="{Binding ShowCursor}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show Cursor During Playback"
                          Command="{Binding ToggleShowCursorDuringPlaybackCommand}">
                    <MenuItem.Icon>
                        <CheckBox Margin="0"
                                  IsChecked="{Binding ShowCursorDuringPlayback}"
                                  Name="ShowCursorDuringPlaybackMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Highlight Viewed Note" Command="{Binding ToggleHighlightViewedNoteCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding HighlightViewedNote}"
                                  Name="HighlightViewedNoteMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Select Last Inserted Note" Command="{Binding ToggleSelectLastInsertedNoteCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding SelectLastInsertedNote}"
                                  Name="SelectLastInsertedNoteMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show Gimmicks In Circle View" Command="{Binding ToggleGimmicksInCircleViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding ShowGimmicksInCircleView}"
                                  Name="ShowGimmicksInCircleViewMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show Gimmicks During Playback"
                          Command="{Binding ToggleShowGimmicksDuringPlaybackInCircleViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding ShowGimmicksDuringPlaybackInCircleView}"
                                  Name="ShowGimmicksDuringPlaybackInCircleViewMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Dark Mode" Command="{Binding ToggleDarkModeViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding DarkMode}"
                                  Name="ToggleDarkModeMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show Measure Movement Buttons" Command="{Binding ToggleShowMeasureButtonsCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding AreMeasureButtonsVisible}"
                                  Name="ToggleShowMeasureButtonsMenuItem"
                                  BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Chart">
                <MenuItem Header="Initial Chart Settings" Command="{Binding OpenInitialChartSettings}" />
            </MenuItem>
        </Menu>

        <Grid RowDefinitions="*" Margin="0,-4,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" MaxWidth="260" />
            </Grid.ColumnDefinitions>

            <!-- Left Side Grid -->
            <Grid RowDefinitions="*,120">
                <!-- Top of Left Side Grid -->
                <Grid RowDefinitions="*">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="260" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Left Stack Panel (Left Stack Panel, Canvas) -->
                    <StackPanel Name="LeftStackPanel" Orientation="Horizontal">
                        <ScrollViewer Name="LeftScrollViewer" VerticalScrollBarVisibility="Auto">
                            <ScrollViewer.Styles>
                                <Style Selector="Button">
                                    <Setter Property="Height" Value="24" />
                                </Style>
                            </ScrollViewer.Styles>
                            <!-- Left Inner Stack Panel (Notes/Gimmicks, Selection, Note Settings) -->
                            <StackPanel Name="LeftInnerStackPanel" Margin="8" Width="260">
                                <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                                    <HeaderedContentControl Header="Note Types" Margin="0,0,8,0">
                                        <StackPanel Margin="8">
                                            <Button Name="tapButton" Classes="note" Background="Fuchsia"
                                                    Foreground="Black"
                                                    Click="tapButton_Click">
                                                Touch
                                            </Button>
                                            <Button Name="orangeButton" Classes="note" Background="Orange"
                                                    Foreground="Black"
                                                    Click="orangeButton_Click">
                                                ⤾ Slide
                                            </Button>
                                            <Button Name="greenButton" Classes="note" Background="Lime"
                                                    Foreground="Black"
                                                    Click="greenButton_Click">
                                                ⤿ Slide
                                            </Button>
                                            <Button Name="redButton" Classes="note" Background="Red" Foreground="Black"
                                                    Click="redButton_Click">
                                                ↑ Snap
                                            </Button>
                                            <Button Name="blueButton" Classes="note" Background="Cyan"
                                                    Foreground="Black"
                                                    Click="blueButton_Click">
                                                ↓ Snap
                                            </Button>
                                            <Button Name="chainButton" Classes="note" Background="rgb(204, 190, 45)"
                                                    Foreground="Black"
                                                    Click="chainButton_Click">
                                                Chain
                                            </Button>
                                            <Button Name="holdButton" Classes="note" Background="Yellow"
                                                    Foreground="Black"
                                                    Click="holdButton_Click">
                                                Hold
                                            </Button>
                                            <Button Name="endChartButton" Classes="note" Background="Black"
                                                    Foreground="White"
                                                    Click="endChartButton_Click">
                                                End of Chart
                                            </Button>
                                            <CheckBox Name="endHoldCheck" IsChecked="False" Margin="0,0"
                                                      PropertyChanged="EndHoldCheck_OnPropertyChanged">
                                                End Hold
                                            </CheckBox>

                                            <RadioButton Name="noBonusRadio"
                                                         IsChecked="True"
                                                         GroupName="Note Types"
                                                         Content="No Bonus"
                                                         Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                            <RadioButton Name="bonusRadio"
                                                         IsChecked="False"
                                                         GroupName="Note Types"
                                                         Content="Bonus Get"
                                                         Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                            <RadioButton Name="flairRadio"
                                                         IsChecked="False"
                                                         GroupName="Note Types"
                                                         Content="R Note (Flair)"
                                                         Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                        </StackPanel>
                                    </HeaderedContentControl>
                                    <Grid RowDefinitions="*,*" Grid.Column="1" Margin="0,0,8,0">
                                        <Grid.Styles>
                                            <Style Selector="RadioButton">
                                                <Setter Property="Margin" Value="0,-1,0,-1" />
                                            </Style>
                                        </Grid.Styles>
                                        <HeaderedContentControl Header="Gimmick Types">
                                            <StackPanel Margin="8">
                                                <Button Name="maskButton" Classes="note" Click="maskButton_Click">
                                                    Mask
                                                </Button>
                                                <Button Name="bpmChangeButton" Classes="note"
                                                        Click="bpmChangeButton_Click">
                                                    BPM Change
                                                </Button>
                                                <Button Name="timeSigButton" Classes="note" Click="timeSigButton_Click">
                                                    Time Signature
                                                </Button>
                                                <Button Name="hiSpeedButton" Classes="note" Click="hiSpeedButton_Click">
                                                    Hi-Speed
                                                </Button>
                                                <Button Name="stopButton" Classes="note" Click="stopButton_Click">
                                                    Stop
                                                </Button>
                                                <Button Name="reverseButton" Classes="note" Click="reverseButton_Click">
                                                    Reverse
                                                </Button>

                                                <RadioButton Name="addMaskRadio"
                                                             IsChecked="True"
                                                             GroupName="Gimmick Types"
                                                             Content="Add Mask"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="removeMaskRadio"
                                                             IsChecked="False"
                                                             GroupName="Gimmick Types"
                                                             Content="Remove Mask"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                            </StackPanel>
                                        </HeaderedContentControl>

                                        <HeaderedContentControl Grid.Row="1" Header="Mask Setting"
                                                                VerticalAlignment="Bottom" Margin="0,8,0,0">
                                            <StackPanel Margin="8">
                                                <RadioButton Name="clockwiseMaskRadio"
                                                             IsChecked="True"
                                                             GroupName="Mask Setting"
                                                             Content="Clockwise"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="cClockwiseMaskRadio"
                                                             IsChecked="False"
                                                             GroupName="Mask Setting"
                                                             Content="C-Clockwise"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="centerMaskRadio"
                                                             IsChecked="False"
                                                             GroupName="Mask Setting"
                                                             Content="From Center"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                            </StackPanel>
                                        </HeaderedContentControl>
                                    </Grid>
                                </Grid>

                                <HeaderedContentControl Header="Current Selection" Margin="0,8,8,0">
                                    <TextBlock Name="currentSelectionLabel" Margin="8">Touch</TextBlock>
                                </HeaderedContentControl>

                                <HeaderedContentControl Header="Current Note Settings"
                                                        Margin="0,8,8,0">
                                    <StackPanel Margin="8">
                                        <TextBlock Margin="0,0,0,4">Position:</TextBlock>
                                        <Grid ColumnDefinitions="100*,158*">
                                            <NumericUpDown Name="positionNumeric"
                                                           Value="0" Increment="1" Minimum="0" Maximum="59"
                                                           ValueChanged="PositionNumeric_OnValueChanged" />
                                            <Slider Grid.Column="1" Name="positionTrackBar"
                                                    VerticalAlignment="Center"
                                                    Value="0" Minimum="0" Maximum="59"
                                                    SmallChange="1" LargeChange="5"
                                                    Padding="8,0,0,0"
                                                    PropertyChanged="PositionTrackBar_OnPropertyChanged" />
                                        </Grid>
                                        <TextBlock Margin="0,4">Size:</TextBlock>
                                        <Grid ColumnDefinitions="100*,158*">
                                            <NumericUpDown Name="sizeNumeric"
                                                           ShowButtonSpinner="False"
                                                           Value="0" Increment="1" Minimum="0" Maximum="59"
                                                           ValueChanged="SizeNumeric_OnValueChanged" />
                                            <Slider Grid.Column="1" Name="sizeTrackBar"
                                                    VerticalAlignment="Center"
                                                    Value="4" Minimum="4" Maximum="59"
                                                    SmallChange="1" LargeChange="5"
                                                    Padding="8,0,0,0"
                                                    PropertyChanged="SizeTrackBar_OnPropertyChanged" />
                                        </Grid>
                                        <TextBlock Margin="0,4">Measure:</TextBlock>
                                        <Grid ColumnDefinitions="8*,4*,*,4*">
                                            <NumericUpDown Grid.Column="0" Name="measureNumeric"
                                                           HorizontalAlignment="Stretch"
                                                           Value="0" Increment="1" Minimum="0" Maximum="9999"
                                                           Margin="0,0,8,0"
                                                           ValueChanged="MeasureNumeric_OnValueChanged" />
                                            <NumericUpDown Grid.Column="1" Name="beat1Numeric"
                                                           HorizontalAlignment="Stretch"
                                                           Value="0" Increment="1" Minimum="0" Maximum="1920"
                                                           ValueChanged="Beat1Numeric_OnValueChanged" />
                                            <TextBlock Grid.Column="2" Text="/" Width="8" Margin="8,0,8,0"
                                                       VerticalAlignment="Center" />
                                            <NumericUpDown Grid.Column="3" Name="beat2Numeric"
                                                           HorizontalAlignment="Stretch"
                                                           Value="16" Increment="1" Minimum="0" Maximum="1920"
                                                           ValueChanged="Beat2Numeric_OnValueChanged" />
                                        </Grid>
                                    </StackPanel>
                                </HeaderedContentControl>

                                <Button Name="insertButton" Click="insertButton_Click" HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Center" Margin="0,4,8,0" Height="28"
                                        Content="{Binding InsertButtonText}" />
                            </StackPanel>
                        </ScrollViewer>
                    </StackPanel>

                    <!-- Canvas Stack Panel -->

                    <!-- Width="611" Height="524" -->
                    <StackPanel Grid.Column="1" Name="CanvasStackPanel">
                        <controls:SkiaCanvas Name="CircleControl" Background="Transparent" RenderSkia="RenderCanvas"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             PointerPressed="CircleControl_OnPointerPressed"
                                             PointerReleased="CircleControl_OnPointerReleased"
                                             PointerMoved="CircleControl_OnPointerMoved"
                                             PointerWheelChanged="CircleControl_OnWheel" />
                    </StackPanel>
                </Grid>

                <!-- Bottom -->
                <Grid Grid.Row="1" Name="BottomStackPanel">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" MaxWidth="160" />
                    </Grid.ColumnDefinitions>

                    <HeaderedContentControl Header="Playback" Margin="8,0,8,8" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch">
                        <StackPanel Margin="8">
                            <Grid ColumnDefinitions="130,*">
                                <StackPanel Margin="8,0">
                                    <Button Name="playButton" Classes="center-text stretch" Click="PlayButton_OnClick"
                                            Margin="0,0,0,4">
                                        Play
                                    </Button>
                                    <Button Name="selectSongButton" Classes="center-text stretch"
                                            Click="SelectSongButton_OnClick">
                                        Select Song
                                    </Button>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <Slider Name="songTrackBar" Value="0" Minimum="0" Maximum="10" SmallChange="1"
                                            LargeChange="5" PropertyChanged="SongTrackBar_OnPropertyChanged"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

                                    <!-- Speed and Volume -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,16,0">
                                            <TextBlock Name="LabelSpeed" HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" TextAlignment="Right"
                                                       Margin="0,0,8,0"
                                                       Width="100">
                                                Speed
                                            </TextBlock>
                                            <Slider Name="trackBarSpeed" Value="100" Minimum="0" Maximum="100"
                                                    SmallChange="1" LargeChange="5" Width="100"
                                                    HorizontalAlignment="Center"
                                                    PropertyChanged="TrackBarSpeed_OnPropertyChanged" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       TextAlignment="Right" Margin="0,0,8,0" Width="60">
                                                Volume
                                            </TextBlock>
                                            <Slider Name="trackBarVolume" Value="100" Minimum="0" Maximum="100"
                                                    SmallChange="1" LargeChange="5" Width="100"
                                                    HorizontalAlignment="Center"
                                                    PropertyChanged="TrackBarVolume_OnPropertyChanged" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Name="HitsoundPanel">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       TextAlignment="Right" Margin="0,0,8,0" Width="60">
                                                Hitsounds
                                            </TextBlock>
                                            <Slider Name="trackBarHitsoundVolume" Value="100" Minimum="0" Maximum="100"
                                                    SmallChange="1" LargeChange="5" Width="50"
                                                    HorizontalAlignment="Center"
                                                    PropertyChanged="TrackBarHitsounds_OnPropertyChanged" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <StackPanel Orientation="Horizontal" Margin="10,4,0,0">
                                <TextBlock FontWeight="Bold" Margin="0,0,8,0">Song File:</TextBlock>
                                <TextBlock Name="songFileLabel">Select File (*.ogg, *.wav, *.flac)</TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </HeaderedContentControl>
                    <HeaderedContentControl Grid.Column="1" Header="Visual Settings" Margin="0,0,0,8"
                                            HorizontalAlignment="Stretch">
                        <StackPanel Margin="8">
                            <TextBlock Margin="0,0,0,8">Hi-Speed:</TextBlock>
                            <NumericUpDown Name="visualHispeedNumeric"
                                           Minimum="0.001" Maximum="500" Value="0.5" Increment="0.05"
                                           ValueChanged="VisualHispeedNumeric_OnValueChanged" />
                        </StackPanel>
                    </HeaderedContentControl>
                </Grid>
            </Grid>

            <!-- Right Side Stack Panel (Note View, Gimmick View) -->
            <StackPanel Name="RightStackPanel" Grid.Column="1" VerticalAlignment="Bottom" Margin="8">
                <HeaderedContentControl Header="Note View" Margin="0,0,0,8">
                    <StackPanel Margin="8">
                        <Grid RowDefinitions="*,Auto,*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" Name="notePrevButton" Margin="0,0,2,4"
                                    Classes="center-text stretch" Click="NotePrevButton_OnClick">
                                &lt; Previous Note
                            </Button>
                            <Button Grid.Row="0" Grid.Column="1" Name="noteNextButton" Margin="0,0,0,4"
                                    Classes="center-text stretch" Click="NoteNextButton_OnClick">
                                Next Note &gt;
                            </Button>
                            <Button Grid.Row="1" Grid.Column="0" Name="measurePrevButton" Margin="0,0,2,4"
                                    Classes="center-text stretch" Click="MeasurePrevButton_OnClick"
                                    IsVisible="{Binding AreMeasureButtonsVisible}">
                                &lt; Measure
                            </Button>
                            <Button Grid.Row="1" Grid.Column="1" Name="measureNextButton" Margin="0,0,0,4"
                                    Classes="center-text stretch" Click="MeasureNextButton_OnClick"
                                    IsVisible="{Binding AreMeasureButtonsVisible}">
                                Measure &gt;
                            </Button>
                            <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Name="notePrevMeasureButton"
                                    Margin="0,0,2,4"
                                    Classes="center-text stretch" Click="NoteJumpToCurrTimeButton_Click">
                                Jump To Nearest Note
                            </Button>
                        </Grid>
                        <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*">
                            <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Measure:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteMeasureLabel" Text="None" />
                            </Grid>

                            <Grid Grid.Row="0" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Beat:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteBeatLabel" Text="None" />
                            </Grid>

                            <Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Type:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteTypeLabel" Width="170" HorizontalAlignment="Left"
                                           Text="None" />
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Position:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="notePositionLabel" Text="None" />
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*">
                                <TextBlock Text="Size:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteSizeLabel" Text="None" />
                            </Grid>
                        </Grid>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="Mask Value:" FontWeight="Bold" Margin="60,0,4,0" />
                            <TextBlock Name="noteMaskLabel" Text="N/A" />
                        </StackPanel>

                        <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                            <Button Grid.Column="0" Name="noteEditSelectedButton" Margin="0,4,1,0"
                                    Classes="center-text stretch" Height="48" Click="NoteEditSelectedButton_OnClick">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center">
                                        Edit Selected
                                    </TextBlock>
                                    <TextBlock HorizontalAlignment="Center">
                                        Note
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="1" Name="noteDeleteSelectedButton" Foreground="Red"
                                    Margin="1,4,0,0"
                                    Classes="center-text stretch" Height="48" Click="NoteDeleteSelectedButton_OnClick">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center">
                                        Delete Selected
                                    </TextBlock>
                                    <TextBlock HorizontalAlignment="Center">
                                        Note
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </StackPanel>
                </HeaderedContentControl>

                <HeaderedContentControl Header="Gimmick View">
                    <StackPanel Margin="8">
                        <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" Name="gimmickPrevButton" Margin="0,0,1,4"
                                    Padding="0,4" Classes="center-text stretch" Click="GimmickPrevButton_OnClick">
                                Previous Gimmick
                            </Button>
                            <Button Grid.Row="0" Grid.Column="1" Name="gimmickNextButton" Margin="1,0,0,4"
                                    Padding="0,4" Classes="center-text stretch" Click="GimmickNextButton_OnClick">
                                Next Gimmick
                            </Button>

                            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="gimmickJumpToCurrTimeButton"
                                    Margin="1,0,0,4"
                                    Classes="center-text stretch" Click="GimmickJumpToCurrTimeButton_OnClick">
                                Jump To Nearest Gimmick
                            </Button>

                            <Grid Grid.Row="2" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Measure:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickMeasureLabel" Text="None" />
                            </Grid>

                            <Grid Grid.Row="2" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*">
                                <TextBlock Text="Beat:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickBeatLabel" Text="None" />
                            </Grid>
                        </Grid>

                        <Grid RowDefinitions="*,*" ColumnDefinitions="*">
                            <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,3*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="Type:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickTypeLabel" Text="None" />
                            </Grid>

                            <Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,3*">
                                <TextBlock Text="Value:" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickValueLabel" Text="None" />
                            </Grid>
                        </Grid>

                        <Grid ColumnDefinitions="*,*">
                            <Button Grid.Row="4" Grid.Column="0" Name="gimmickEditButton" Margin="0,4,1,0"
                                    Classes="center-text stretch" Click="GimmickEditButton_OnClick">
                                Edit Gimmick
                            </Button>
                            <Button Grid.Row="4" Grid.Column="1" Name="gimmickDeleteButton" Foreground="Red"
                                    Margin="1,4,0,0"
                                    Classes="center-text stretch" Click="GimmickDeleteButton_OnClick">
                                Delete Gimmick
                            </Button>
                        </Grid>
                    </StackPanel>
                </HeaderedContentControl>
            </StackPanel>
        </Grid>
    </DockPanel>
</UserControl>
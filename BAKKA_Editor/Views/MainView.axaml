<?xml version="1.0" encoding="utf-8"?>

<UserControl xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:BAKKA_Editor.ViewModels" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
             d:DesignWidth="1154" d:DesignHeight="800" xmlns:controls="clr-namespace:BAKKA_Editor.Controls"
             xmlns:assets="clr-namespace:BAKKA_Editor.Assets"
             x:Class="BAKKA_Editor.Views.MainView" PropertyChanged="AvaloniaObject_OnPropertyChanged" Focusable="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="HeaderBorderColor" Color="#0f0f0f" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="HeaderBorderColor" Color="#444444" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Styles>
        <Style Selector="RadioButton">
            <Setter Property="Margin" Value="0,4,0,4" />
        </Style>
        <Style Selector="Button.note">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Margin" Value="0,0,0,4" />
        </Style>
        <Style Selector="Button.center-text">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
        <Style Selector="Button.stretch">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
    </UserControl.Styles>
    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>
    <DockPanel Margin="2">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static assets:Resources.File}">
                <MenuItem Header="{x:Static assets:Resources.New}" Command="{Binding NewCommand}" InputGesture="Ctrl+N" />
                <MenuItem Header="{x:Static assets:Resources.Open}" Command="{Binding OpenCommand}"
                          InputGesture="Ctrl+O" />
                <MenuItem Header="{x:Static assets:Resources.Save}" Command="{Binding SaveCommand}"
                          InputGesture="Ctrl+S" />
                <MenuItem Header="{x:Static assets:Resources.SaveAs}" Command="{Binding SaveAsCommand}"
                          InputGesture="Ctrl+Shift+S" />
                <Separator />
                <MenuItem Header="{x:Static assets:Resources.Exit}" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="{x:Static assets:Resources.Edit}">
                <MenuItem Header="{x:Static assets:Resources.Undo}" Name="UndoMenuItem" Command="{Binding UndoCommand}"
                          InputGesture="Ctrl+Z" />
                <MenuItem Header="{x:Static assets:Resources.Redo}" Name="RedoMenuItem" Command="{Binding RedoCommand}"
                          InputGesture="Ctrl+Y" />
            </MenuItem>
            <MenuItem Header="{x:Static assets:Resources.View}">
                <MenuItem Header="{x:Static assets:Resources.ShowCursor}" Command="{Binding ToggleShowCursorCommand}">
                    <MenuItem.Icon>
                        <CheckBox Name="ShowCursorMenuItem" BorderThickness="0" IsHitTestVisible="False"
                                  IsChecked="{Binding ShowCursor}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.ShowCursorDuringPlayback}"
                          Command="{Binding ToggleShowCursorDuringPlaybackCommand}">
                    <MenuItem.Icon>
                        <CheckBox Margin="0" IsChecked="{Binding ShowCursorDuringPlayback}"
                                  Name="ShowCursorDuringPlaybackMenuItem" BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.HighlightViewedNote}"
                          Command="{Binding ToggleHighlightViewedNoteCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding HighlightViewedNote}" Name="HighlightViewedNoteMenuItem"
                                  BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.SelectLastInsertedNote}"
                          Command="{Binding ToggleSelectLastInsertedNoteCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding SelectLastInsertedNote}" Name="SelectLastInsertedNoteMenuItem"
                                  BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.ShowGimmicksInCircleView}"
                          Command="{Binding ToggleGimmicksInCircleViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding ShowGimmicksInCircleView}"
                                  Name="ShowGimmicksInCircleViewMenuItem" BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.ShowGimmicksDuringPlayback}"
                          Command="{Binding ToggleShowGimmicksDuringPlaybackInCircleViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding ShowGimmicksDuringPlaybackInCircleView}"
                                  Name="ShowGimmicksDuringPlaybackInCircleViewMenuItem" BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.DarkMode}" Command="{Binding ToggleDarkModeViewCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding DarkMode}" Name="ToggleDarkModeMenuItem" BorderThickness="0"
                                  IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.ShowMeasureMovementButtons}"
                          Command="{Binding ToggleShowMeasureButtonsCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding AreMeasureButtonsVisible}"
                                  Name="ToggleShowMeasureButtonsMenuItem" BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{x:Static assets:Resources.PlaceNoteOnDrag}"
                          Command="{Binding TogglePlaceNoteOnDragCommand}">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding PlaceNoteOnDrag}" Name="PlaceNoteOnDragMenuItem"
                                  BorderThickness="0" IsHitTestVisible="False" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static assets:Resources.Chart}">
                <MenuItem Header="{x:Static assets:Resources.InitialChartSettings}"
                          Command="{Binding OpenInitialChartSettings}" />
            </MenuItem>
        </Menu>
        <Grid RowDefinitions="*" Margin="0,-4,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" MaxWidth="260" />
            </Grid.ColumnDefinitions>
            <!-- Left Side Grid -->
            <Grid RowDefinitions="*,120">
                <!-- Top of Left Side Grid -->
                <Grid RowDefinitions="*">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="260" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!-- Left Stack Panel (Left Stack Panel, Canvas) -->
                    <StackPanel Name="LeftStackPanel" Orientation="Horizontal">
                        <ScrollViewer Name="LeftScrollViewer" VerticalScrollBarVisibility="Auto">
                            <ScrollViewer.Styles>
                                <Style Selector="Button">
                                    <Setter Property="Height" Value="24" />
                                </Style>
                            </ScrollViewer.Styles>
                            <!-- Left Inner Stack Panel (Notes/Gimmicks, Selection, Note Settings) -->
                            <StackPanel Name="LeftInnerStackPanel" Margin="8" Width="260">
                                <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                                    <HeaderedContentControl Header="{x:Static assets:Resources.NoteTypes}"
                                                            Margin="0,0,8,0">
                                        <StackPanel Margin="8">
                                            <Button Name="tapButton" Classes="note" Background="Fuchsia"
                                                    Foreground="Black" Click="tapButton_Click"
                                                    Content="{x:Static assets:Resources.Touch}">
                                            </Button>
                                            <Button Name="orangeButton" Classes="note" Background="Orange"
                                                    Foreground="Black" Click="orangeButton_Click"
                                                    Content="{x:Static assets:Resources.LeftArrowSlide}">
                                            </Button>
                                            <Button Name="greenButton" Classes="note" Background="Lime"
                                                    Foreground="Black" Click="greenButton_Click"
                                                    Content="{x:Static assets:Resources.RightArrowSlide}">
                                            </Button>
                                            <Button Name="redButton" Classes="note" Background="Red" Foreground="Black"
                                                    Click="redButton_Click"
                                                    Content="{x:Static assets:Resources.UpArrowSnap}">
                                            </Button>
                                            <Button Name="blueButton" Classes="note" Background="Cyan"
                                                    Foreground="Black" Click="blueButton_Click"
                                                    Content="{x:Static assets:Resources.DownArrowSnap}">
                                            </Button>
                                            <Button Name="chainButton" Classes="note" Background="rgb(204, 190, 45)"
                                                    Foreground="Black" Click="chainButton_Click"
                                                    Content="{x:Static assets:Resources.Chain}">
                                            </Button>
                                            <Button Name="holdButton" Classes="note" Background="Yellow"
                                                    Foreground="Black" Click="holdButton_Click"
                                                    Content="{x:Static assets:Resources.Hold}">
                                            </Button>
                                            <Button Name="endChartButton" Classes="note" Background="Black"
                                                    Foreground="White" Click="endChartButton_Click"
                                                    Content="{x:Static assets:Resources.EndOfChart}">
                                            </Button>
                                            <CheckBox Name="_endHoldCheck" IsChecked="{Binding EndHoldChecked}"
                                                      Margin="0,0" IsCheckedChanged="EndHoldCheck_IsCheckedChanged"
                                                      Content="{x:Static assets:Resources.EndHold}">
                                            </CheckBox>
                                            <RadioButton Name="noBonusRadio" IsChecked="True" GroupName="Note Types"
                                                         Content="{x:Static assets:Resources.NoBonus}" Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                            <RadioButton Name="bonusRadio" IsChecked="False" GroupName="Note Types"
                                                         Content="{x:Static assets:Resources.BonusGet}" Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                            <RadioButton Name="flairRadio" IsChecked="False" GroupName="Note Types"
                                                         Content="{x:Static assets:Resources.RNoteFlair}" Margin="0,0"
                                                         IsCheckedChanged="BonusRadioCheck" />
                                        </StackPanel>
                                    </HeaderedContentControl>
                                    <Grid RowDefinitions="*,*" Grid.Column="1" Margin="0,0,8,0">
                                        <Grid.Styles>
                                            <Style Selector="RadioButton">
                                                <Setter Property="Margin" Value="0,-1,0,-1" />
                                            </Style>
                                        </Grid.Styles>
                                        <HeaderedContentControl Header="{x:Static assets:Resources.GimmickTypes}">
                                            <StackPanel Margin="8">
                                                <Button Name="maskButton" Classes="note" Click="maskButton_Click"
                                                        Content="{x:Static assets:Resources.Mask}">
                                                </Button>
                                                <Button Name="bpmChangeButton" Classes="note"
                                                        Click="bpmChangeButton_Click"
                                                        Content="{x:Static assets:Resources.BpmChange}">
                                                </Button>
                                                <Button Name="timeSigButton" Classes="note" Click="timeSigButton_Click"
                                                        Content="{x:Static assets:Resources.TimeSignature}">
                                                </Button>
                                                <Button Name="hiSpeedButton" Classes="note" Click="hiSpeedButton_Click"
                                                        Content="{x:Static assets:Resources.HiSpeed}">
                                                </Button>
                                                <Button Name="stopButton" Classes="note" Click="stopButton_Click"
                                                        Content="{x:Static assets:Resources.Stop}">
                                                </Button>
                                                <Button Name="reverseButton" Classes="note" Click="reverseButton_Click"
                                                        Content="{x:Static assets:Resources.Reverse}">
                                                </Button>
                                                <RadioButton Name="addMaskRadio" IsChecked="True"
                                                             GroupName="Gimmick Types"
                                                             Content="{x:Static assets:Resources.AddMask}"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="removeMaskRadio" IsChecked="False"
                                                             GroupName="Gimmick Types"
                                                             Content="{x:Static assets:Resources.RemoveMask}"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                            </StackPanel>
                                        </HeaderedContentControl>
                                        <HeaderedContentControl Grid.Row="1"
                                                                Header="{x:Static assets:Resources.MaskSetting}"
                                                                VerticalAlignment="Bottom" Margin="0,8,0,0">
                                            <StackPanel Margin="8">
                                                <RadioButton Name="clockwiseMaskRadio" IsChecked="True"
                                                             GroupName="Mask Setting"
                                                             Content="{x:Static assets:Resources.Clockwise}"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="cClockwiseMaskRadio" IsChecked="False"
                                                             GroupName="Mask Setting"
                                                             Content="{x:Static assets:Resources.CClockwise}"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                                <RadioButton Name="centerMaskRadio" IsChecked="False"
                                                             GroupName="Mask Setting"
                                                             Content="{x:Static assets:Resources.FromCenter}"
                                                             IsCheckedChanged="maskRatio_CheckChanged" />
                                            </StackPanel>
                                        </HeaderedContentControl>
                                    </Grid>
                                </Grid>
                                <HeaderedContentControl Header="{x:Static assets:Resources.CurrentSelection}"
                                                        Margin="0,8,8,0">
                                    <TextBlock Name="currentSelectionLabel" Margin="8"
                                               Text="{x:Static assets:Resources.Touch}">
                                    </TextBlock>
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static assets:Resources.CurrentNoteSettings}"
                                                        Margin="0,8,8,0">
                                    <StackPanel Margin="8">
                                        <TextBlock Margin="0,0,0,4" Text="{x:Static assets:Resources.Position}"></TextBlock>
                                        <Grid ColumnDefinitions="100*,158*">
                                            <NumericUpDown Value="{Binding PositionNumeric}" Increment="1"
                                                           Minimum="{Binding PositionNumericMinimum}"
                                                           Maximum="{Binding PositionNumericMaximum}"
                                                           ValueChanged="PositionNumeric_OnValueChanged" />
                                            <Slider Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding PositionTrackBar}"
                                                    Minimum="{Binding PositionTrackBarMinimum}"
                                                    Maximum="{Binding PositionTrackBarMaximum}" SmallChange="1"
                                                    LargeChange="5" Padding="8,0,0,0"
                                                    ValueChanged="PositionTrackBar_OnValueChanged"
                                                    PointerWheelChanged="PositionTrackBar_OnPointerWheelChanged" />
                                        </Grid>
                                        <TextBlock Margin="0,4" Text="{x:Static assets:Resources.Size}"></TextBlock>
                                        <Grid ColumnDefinitions="100*,158*">
                                            <NumericUpDown Value="{Binding SizeNumeric}" Increment="1"
                                                           Minimum="{Binding SizeNumericMinimum}"
                                                           Maximum="{Binding SizeNumericMaximum}"
                                                           ValueChanged="SizeNumeric_OnValueChanged" />
                                            <Slider Grid.Column="1" VerticalAlignment="Center"
                                                    Value="{Binding SizeTrackBar}"
                                                    Minimum="{Binding SizeTrackBarMinimum}"
                                                    Maximum="{Binding SizeTrackBarMaximum}" SmallChange="1"
                                                    LargeChange="5" Padding="8,0,0,0"
                                                    ValueChanged="SizeTrackBar_OnValueChanged"
                                                    PointerWheelChanged="SizeTrackBar_OnPointerWheelChanged" />
                                        </Grid>
                                        <TextBlock Margin="0,4" Text="{x:Static assets:Resources.Measure}"></TextBlock>
                                        <Grid ColumnDefinitions="8*,4*,*,4*">
                                            <NumericUpDown Grid.Column="0" HorizontalAlignment="Stretch"
                                                           Value="{Binding MeasureNumeric}" Increment="1"
                                                           Minimum="{Binding MeasureNumericMinimum}"
                                                           Maximum="{Binding MeasureNumericMaximum}" Margin="0,0,8,0"
                                                           ValueChanged="MeasureNumeric_OnValueChanged" />
                                            <NumericUpDown Grid.Column="1" HorizontalAlignment="Stretch"
                                                           Value="{Binding Beat1Numeric}" Increment="1"
                                                           Minimum="{Binding Beat1NumericMinimum}"
                                                           Maximum="{Binding Beat1NumericMaximum}"
                                                           ValueChanged="Beat1Numeric_OnValueChanged" />
                                            <TextBlock Grid.Column="2" Text="/" Width="8" Margin="8,0,8,0"
                                                       VerticalAlignment="Center" />
                                            <NumericUpDown Grid.Column="3" HorizontalAlignment="Stretch"
                                                           Value="{Binding Beat2Numeric}" Increment="1"
                                                           Minimum="{Binding Beat2NumericMinimum}"
                                                           Maximum="{Binding Beat2NumericMaximum}"
                                                           ValueChanged="Beat2Numeric_OnValueChanged" />
                                        </Grid>
                                    </StackPanel>
                                </HeaderedContentControl>
                                <Button Name="insertButton" Click="insertButton_Click" HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Center" Margin="0,4,8,0" Height="28"
                                        Content="{Binding InsertButtonText}" />
                            </StackPanel>
                        </ScrollViewer>
                    </StackPanel>
                    <!-- Canvas Stack Panel -->
                    <StackPanel Grid.Column="1" Name="CanvasStackPanel">
                        <controls:SkiaCanvas Name="CircleControl" Background="Transparent" RenderSkia="RenderCanvas"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"
                                             PointerPressed="CircleControl_OnPointerPressed"
                                             PointerReleased="CircleControl_OnPointerReleased"
                                             PointerMoved="CircleControl_OnPointerMoved"
                                             PointerWheelChanged="CircleControl_OnWheel" />
                    </StackPanel>
                </Grid>
                <!-- Bottom -->
                <Grid Grid.Row="1" Name="BottomStackPanel">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" MaxWidth="160" />
                    </Grid.ColumnDefinitions>
                    <HeaderedContentControl Header="{x:Static assets:Resources.Playback}" Margin="8,0,8,8"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <StackPanel Margin="8">
                            <Grid ColumnDefinitions="130,*">
                                <StackPanel Margin="8,0">
                                    <Button Name="playButton" Classes="center-text stretch" Click="PlayButton_OnClick"
                                            Margin="0,0,0,4" Content="{x:Static assets:Resources.Play}">
                                    </Button>
                                    <Button Name="selectSongButton" Classes="center-text stretch"
                                            Click="SelectSongButton_OnClick"
                                            Content="{x:Static assets:Resources.SelectSong}">
                                    </Button>
                                </StackPanel>
                                <StackPanel Grid.Column="1">
                                    <Slider Value="{Binding SongTrackBar}" Minimum="0"
                                            Maximum="{Binding SongTrackBarMaximum}" SmallChange="1" LargeChange="5"
                                            ValueChanged="SongTrackBar_OnValueChanged" VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch" />
                                    <!-- Speed and Volume -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,16,0,0">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,16,0">
                                            <TextBlock Name="LabelSpeed" HorizontalAlignment="Center"
                                                       VerticalAlignment="Center" TextAlignment="Right"
                                                       Margin="0,0,8,0" Width="100"
                                                       Text="{x:Static assets:Resources.Speed}">
                                            </TextBlock>
                                            <Slider Value="{Binding SpeedTrackBar}" Minimum="0"
                                                    Maximum="{Binding SpeedTrackBarMaximum}" SmallChange="1"
                                                    LargeChange="5" Width="100" HorizontalAlignment="Center"
                                                    ValueChanged="TrackBarSpeed_OnValueChanged" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       TextAlignment="Right" Margin="0,0,8,0" Width="60"
                                                       Text="{x:Static assets:Resources.Volume}">
                                            </TextBlock>
                                            <Slider Name="trackBarVolume" Value="{Binding VolumeTrackBar}" Minimum="0"
                                                    Maximum="{Binding VolumeTrackBarMaximum}" SmallChange="1"
                                                    LargeChange="5" Width="100" HorizontalAlignment="Center"
                                                    ValueChanged="TrackBarVolume_OnValueChanged" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Name="HitsoundPanel">
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                                       TextAlignment="Right" Margin="0,0,8,0" Width="60"
                                                       Text="{x:Static assets:Resources.Hitsounds}">
                                            </TextBlock>
                                            <Slider Value="{Binding HitsoundVolumeTrackBar}" Minimum="0"
                                                    Maximum="{Binding HitsoundVolumeMaximum}" SmallChange="1"
                                                    LargeChange="5" Width="50" HorizontalAlignment="Center"
                                                    ValueChanged="TrackBarHitsounds_OnValueChanged" />
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <StackPanel Orientation="Horizontal" Margin="10,4,0,0">
                                <TextBlock FontWeight="Bold" Margin="0,0,8,0"
                                           Text="{x:Static assets:Resources.SongFile}">
                                </TextBlock>
                                <TextBlock Name="songFileLabel" Text="{x:Static assets:Resources.SelectFileOggWavFlac}"></TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </HeaderedContentControl>
                    <HeaderedContentControl Grid.Column="1" Header="{x:Static assets:Resources.VisualSettings}"
                                            Margin="0,0,0,8" HorizontalAlignment="Stretch">
                        <StackPanel Margin="8">
                            <TextBlock Margin="0,0,0,8" Text="{x:Static assets:Resources.HiSpeed}"></TextBlock>
                            <NumericUpDown Minimum="{Binding VisualHiSpeedNumericMinimum}"
                                           Maximum="{Binding VisualHiSpeedNumericMaximum}"
                                           Value="{Binding VisualHiSpeedNumeric}" Increment="0.05"
                                           ValueChanged="VisualHispeedNumeric_OnValueChanged" />
                        </StackPanel>
                    </HeaderedContentControl>
                </Grid>
            </Grid>
            <!-- Right Side Stack Panel (Note View, Gimmick View) -->
            <StackPanel Name="RightStackPanel" Grid.Column="1" VerticalAlignment="Bottom" Margin="8">
                <!-- TODO: move this shit out!!!!!!!! -->
                <HeaderedContentControl Header="{x:Static assets:Resources.NotesOnBeat}" Margin="0,0,0,8"
                                        IsVisible="{Binding ShowNotesOnBeat}">
                    <Grid RowDefinitions="Auto,Auto">
                        <!-- Headers -->
                        <Grid ColumnDefinitions="10*,5*,5*" Margin="0,8,0,4">
                            <TextBlock Padding="16,0,0,0" Text="{x:Static assets:Resources.Type}"></TextBlock>
                            <TextBlock Grid.Column="1" Text="{x:Static assets:Resources.Position}"></TextBlock>
                            <TextBlock Grid.Column="2" Text="{x:Static assets:Resources.Size}"></TextBlock>
                        </Grid>
                        <ListBox Grid.Row="1" Name="NotesOnBeatListBox" ItemsSource="{Binding NotesOnBeatList}"
                                 SelectionChanged="NotesOnBeatListBox_OnSelectionChanged" Height="160"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="10*,5*,5*">
                                        <TextBlock VerticalAlignment="Center" Text="{Binding Type}" TextWrapping="Wrap" />
                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Position}"
                                                   TextWrapping="Wrap" />
                                        <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="{Binding Size}"
                                                   TextWrapping="Wrap" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static assets:Resources.NoteView}" Margin="0,0,0,8">
                    <StackPanel Margin="8">
                        <Grid RowDefinitions="*,Auto,*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" Name="notePrevButton" Margin="0,0,2,4"
                                    Classes="center-text stretch" Click="NotePrevButton_OnClick"
                                    Content="{x:Static assets:Resources.PreviousNote}">
                            </Button>
                            <Button Grid.Row="0" Grid.Column="1" Name="noteNextButton" Margin="0,0,0,4"
                                    Classes="center-text stretch" Click="NoteNextButton_OnClick"
                                    Content="{x:Static assets:Resources.NextNote}">
                            </Button>
                            <Button Grid.Row="1" Grid.Column="0" Name="measurePrevButton" Margin="0,0,2,4"
                                    Classes="center-text stretch" Click="MeasurePrevButton_OnClick"
                                    IsVisible="{Binding AreMeasureButtonsVisible}"
                                    Content="{x:Static assets:Resources.Measure}">
                            </Button>
                            <Button Grid.Row="1" Grid.Column="1" Name="measureNextButton" Margin="0,0,0,4"
                                    Classes="center-text stretch" Click="MeasureNextButton_OnClick"
                                    IsVisible="{Binding AreMeasureButtonsVisible}"
                                    Content="{x:Static assets:Resources.Measure}">
                            </Button>
                            <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Name="notePrevMeasureButton"
                                    Margin="0,0,2,4" Classes="center-text stretch"
                                    Click="NoteJumpToCurrTimeButton_Click"
                                    Content="{x:Static assets:Resources.JumpToNearestNote}">
                            </Button>
                        </Grid>
                        <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*">
                            <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Measure}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteMeasureLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="0" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Beat}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteBeatLabel" Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Type}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteTypeLabel" Width="170" HorizontalAlignment="Left"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="2" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Position}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="notePositionLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="2" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*">
                                <TextBlock Text="{x:Static assets:Resources.Size}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="noteSizeLabel" Text="{x:Static assets:Resources.None}" />
                            </Grid>
                        </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{x:Static assets:Resources.MaskValue}" FontWeight="Bold" Margin="60,0,4,0" />
                            <TextBlock Name="noteMaskLabel" Text="{x:Static assets:Resources.NA}" />
                        </StackPanel>
                        <Grid RowDefinitions="*" ColumnDefinitions="*,*">
                            <Button Grid.Column="0" Name="noteEditSelectedButton" Margin="0,4,1,0"
                                    Classes="center-text stretch" Height="48" Click="NoteEditSelectedButton_OnClick">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center"
                                               Text="{x:Static assets:Resources.EditSelected}">
                                    </TextBlock>
                                    <TextBlock HorizontalAlignment="Center" Text="{x:Static assets:Resources.Note}"></TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="1" Name="noteDeleteSelectedButton" Foreground="Red" Margin="1,4,0,0"
                                    Classes="center-text stretch" Height="48" Click="NoteDeleteSelectedButton_OnClick">
                                <StackPanel>
                                    <TextBlock HorizontalAlignment="Center"
                                               Text="{x:Static assets:Resources.DeleteSelected}">
                                    </TextBlock>
                                    <TextBlock HorizontalAlignment="Center" Text="{x:Static assets:Resources.Note}"></TextBlock>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </StackPanel>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static assets:Resources.GimmickView}">
                    <StackPanel Margin="8">
                        <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*">
                            <Button Grid.Row="0" Grid.Column="0" Name="gimmickPrevButton" Margin="0,0,1,4"
                                    Padding="0,4" Classes="center-text stretch" Click="GimmickPrevButton_OnClick"
                                    Content="{x:Static assets:Resources.PreviousGimmick}">
                            </Button>
                            <Button Grid.Row="0" Grid.Column="1" Name="gimmickNextButton" Margin="1,0,0,4"
                                    Padding="0,4" Classes="center-text stretch" Click="GimmickNextButton_OnClick"
                                    Content="{x:Static assets:Resources.NextGimmick}">
                            </Button>
                            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="gimmickJumpToCurrTimeButton"
                                    Margin="1,0,0,4" Classes="center-text stretch"
                                    Click="GimmickJumpToCurrTimeButton_OnClick"
                                    Content="{x:Static assets:Resources.JumpToNearestGimmick}">
                            </Button>
                            <Grid Grid.Row="2" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Measure}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickMeasureLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="2" Grid.Column="1" RowDefinitions="*" ColumnDefinitions="*,*">
                                <TextBlock Text="{x:Static assets:Resources.Beat}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickBeatLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                        </Grid>
                        <Grid RowDefinitions="*,*" ColumnDefinitions="*">
                            <Grid Grid.Row="0" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,3*"
                                  Margin="0,0,0,4">
                                <TextBlock Text="{x:Static assets:Resources.Type}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickTypeLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                            <Grid Grid.Row="1" Grid.Column="0" RowDefinitions="*" ColumnDefinitions="*,3*">
                                <TextBlock Text="{x:Static assets:Resources.Value}" FontWeight="Bold" />
                                <TextBlock Grid.Column="1" Name="gimmickValueLabel"
                                           Text="{x:Static assets:Resources.None}" />
                            </Grid>
                        </Grid>
                        <Grid ColumnDefinitions="*,*">
                            <Button Grid.Row="4" Grid.Column="0" Name="gimmickEditButton" Margin="0,4,1,0"
                                    Classes="center-text stretch" Click="GimmickEditButton_OnClick"
                                    Content="{x:Static assets:Resources.EditGimmick}">
                            </Button>
                            <Button Grid.Row="4" Grid.Column="1" Name="gimmickDeleteButton" Foreground="Red"
                                    Margin="1,4,0,0" Classes="center-text stretch" Click="GimmickDeleteButton_OnClick"
                                    Content="{x:Static assets:Resources.DeleteGimmick}">
                            </Button>
                        </Grid>
                    </StackPanel>
                </HeaderedContentControl>
            </StackPanel>
        </Grid>
    </DockPanel>
</UserControl>